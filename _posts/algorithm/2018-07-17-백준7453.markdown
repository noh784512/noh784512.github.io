---
layout: post
title:  "백준 7453 합이 0인 네 정수 "
date:   2018-07-17 14:48:59
categories: algorithm
---

문제 : <https://www.acmicpc.net/problem/7453>

시간초과를 해결하지 못해서 결국 다른 사람들의 풀이를 봤다.  

풀이의 핵심 
+ A,B,C,D 의 배열 = > A의 원소+B의 원소로 이루어진 x , C의 원소+D의 원소로 이루어진 y
+ 이분탐색
+ lower_bound, upper_bound 를 이용하여 중복된 개수 구하기



~~~
#include<iostream>
#include<string>
#include<cstring>
#include<vector>
#include<algorithm>
using namespace std;

int n;

long tot = 0;
vector< vector<int> > arr;
vector<int> x, y;

int main()
{
	cin >> n;
	int tmp;

	for (int i = 0; i < 4; i++)
	{
		vector<int> element(n);
		arr.push_back(element);
	}


	for (int i = 0; i < n; i++)
	{
		cin >> arr[0][i] >> arr[1][i] >> arr[2][i] >> arr[3][i];

	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			x.push_back(arr[0][i] + arr[1][j]);
			y.push_back(arr[2][i] + arr[3][j]);
		}
	}
	sort(y.begin(), y.end());
	int left = 0, right = n * n;

	for (int i = 0; i < x.size(); i++)
	{
		while (left < right)
		{
			int mid = (left + right) / 2;
			if (x[i] + y[mid] < 0)
				left = mid + 1;
			else
				right = mid;
		}
		long lower_bound = right;
		left = 0, right = n * n;
		while (left < right)
		{
			int mid = (left + right) / 2;
			if (x[i] + y[mid] <= 0)
				left = mid + 1;
			else
				right = mid;
		}
		long upper_bound = right;

		tot += upper_bound - lower_bound;
		left = 0, right = n * n;
	}
	cout << tot;

}
~~~
